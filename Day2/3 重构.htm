<!DOCTYPE html>
<html lang="en">

    <head>
        <meta charset="UTF-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Document</title>
        <link rel="stylesheet" href="/style.css">
        <style>
            .active {
                color: red;
            }
        </style>
    </head>

    <body>
        <div id="root"></div>

        <script crossorigin src="https://unpkg.com/react@18/umd/react.development.js"></script>
        <script crossorigin src="https://unpkg.com/react-dom@18/umd/react-dom.development.js"></script>
        <script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>

        <script type="text/babel">

            // 1.创建root
            const root = ReactDOM.createRoot(document.querySelector("#root"))

            // 封装App组件
            class App extends React.Component {
                constructor() {
                    super()
                    this.state = {
                        movies: ["星际穿越", "盗梦空间", "大话西游", "流浪地球"],
                        currentIndex: 0
                    }
                }
                itemClick(index) {
                    this.setState({ currentIndex: index })
                }
                render() {
                    const { movies, currentIndex } = this.state
                    const liEls = movies.map((item, index) => {
                        return (
                            <li
                                className={currentIndex === index ? 'active' : ''}
                                key={item}
                                onClick={() => this.itemClick(index)}
                            >
                                {item}
                            </li>

                        )

                    })
                    return (
                        <div>
                            <ul>{liEls} </ul>

                        </div>
                    )

                }
            }
            // 2.渲染组件
            root.render(<App />)
        </script>
    </body>

</html>